package org.usfirst.frc.team93.robot.utilities;

import edu.wpi.first.wpilibj.DriverStation;
import edu.wpi.first.wpilibj.command.Command;
import edu.wpi.first.wpilibj.smartdashboard.SendableChooser;
import edu.wpi.first.wpilibj.smartdashboard.SmartDashboard;
import realisticAutoCases.LeftLeft;
import realisticAutoCases.LeftRight;
import realisticAutoCases.MidLeft;
import realisticAutoCases.MidRight;
import realisticAutoCases.Mobility;
import realisticAutoCases.RightLeft;
import realisticAutoCases.RightRight;

public class AutoSelector
{
	public static SendableChooser<location> StartingPosition;
	public static SendableChooser<prioritySelect> priority;
	
	enum location
	{
		LEFT, RIGHT, MIDDLE
	}
	
	enum prioritySelect
	{
		SWITCH, MOBILITY
	}
	
	public AutoSelector()
	{
		
		StartingPosition = new SendableChooser<location>();
		StartingPosition.addDefault("Left", location.LEFT);
		StartingPosition.addObject("Middle", location.MIDDLE);
		StartingPosition.addObject("Right", location.RIGHT);
		priority = new SendableChooser<prioritySelect>();
		priority.addDefault("SWITCH", prioritySelect.SWITCH);
		priority.addObject("MOBILITY", prioritySelect.MOBILITY);
		SmartDashboard.putNumber("TimeBeforeAuto", 0);
	}
	
	public Command getAutoCommand()
	{
		String sFMSData = DriverStation.getInstance().getGameSpecificMessage().substring(1, 1);
		if (priority.getSelected() == prioritySelect.SWITCH)
		{
			if (sFMSData.equals("RL") || sFMSData.equals("RR"))
			{
				switch (StartingPosition.getSelected())
				{
					case LEFT:
						return (new LeftRight());
					case MIDDLE:
						return (new MidRight());
					default:
						return (new RightRight());
				}
			}
			else
			{
				switch (StartingPosition.getSelected())
				{
					case LEFT:
						return (new LeftLeft());
					case MIDDLE:
						return (new MidLeft());
					default:
						return (new RightLeft());
				}
			}
		}
		else
		{
			return (new Mobility());
		}
	}
}
