<crap_result>
  <project>
    C:\sandbox2014\robot\branches\autonomous_commandgrouplearning_agehring_1_18_2014\Team93Robot2014
  </project>
  <project_id>
    1390269087390
  </project_id>
  <timestamp>
    1/30/14 8:42 PM
  </timestamp>
  <classDirectories>
    <classDirectory>
      C:\sandbox2014\robot\branches\autonomous_commandgrouplearning_agehring_1_18_2014\Team93Robot2014\build\classes
    </classDirectory>
  </classDirectories>
  <testClassDirectories>
    <testClassDirectory>
      C:\sandbox2014\robot\branches\autonomous_commandgrouplearning_agehring_1_18_2014\Team93Robot2014\test_bin
    </testClassDirectory>
    <testClassDirectory>
      C:\sandbox2014\robot\branches\autonomous_commandgrouplearning_agehring_1_18_2014\Team93Robot2014\integration_tests_bin
    </testClassDirectory>
    <testClassDirectory>
      C:\sandbox2014\robot\branches\autonomous_commandgrouplearning_agehring_1_18_2014\Team93Robot2014\agitar\test_bin
    </testClassDirectory>
  </testClassDirectories>
  <sourceDirectories>
    <sourceDirectory>
      C:\sandbox2014\robot\branches\autonomous_commandgrouplearning_agehring_1_18_2014\Team93Robot2014\src
    </sourceDirectory>
  </sourceDirectories>
  <libClasspaths>
    <libClasspath>
      C:\sandbox2014\robot\branches\autonomous_commandgrouplearning_agehring_1_18_2014\Team93Robot2014\lib\networktables-crio.jar
    </libClasspath>
    <libClasspath>
      C:\sandbox2014\robot\branches\autonomous_commandgrouplearning_agehring_1_18_2014\Team93Robot2014\lib\squawk.jar
    </libClasspath>
    <libClasspath>
      C:\sandbox2014\robot\branches\autonomous_commandgrouplearning_agehring_1_18_2014\Team93Robot2014\lib\wpilibj.jar
    </libClasspath>
  </libClasspaths>
  <stats>
    <name>
      Method Crap Stats
    </name>
    <totalCrap>
      356.00
    </totalCrap>
    <crap>
      2.74
    </crap>
    <median>
      2.00
    </median>
    <average>
      2.74
    </average>
    <stdDev>
      4.32
    </stdDev>
    <methodCount>
      130
    </methodCount>
    <crapMethodCount>
      2
    </crapMethodCount>
    <crapMethodPercent>
      1.54
    </crapMethodPercent>
    <crapLoad>
      11
    </crapLoad>
    <crapThreshold>
      30
    </crapThreshold>
    <globalAverage>
      -1.00
    </globalAverage>
    <globalCraploadAverage>
      -1.00
    </globalCraploadAverage>
    <globalCrapMethodAverage>
      -1.00
    </globalCrapMethodAverage>
    <globalTotalMethodAverage>
      -1.00
    </globalTotalMethodAverage>
    <globalAverageDiff>
      3.74
    </globalAverageDiff>
    <globalCraploadAverageDiff>
      12.00
    </globalCraploadAverageDiff>
    <globalCrapMethodAverageDiff>
      3.00
    </globalCrapMethodAverageDiff>
    <globalTotalMethodAverageDiff>
      131.00
    </globalTotalMethodAverageDiff>
    <shareStatsUrl>
      http://www.crap4j.org/benchmark/stats/new?stat[project_hash]=1390269087390&amp;stat[project_url]=Team93Robot2014&amp;stat[crap]=1.54&amp;stat[crap_load]=11&amp;stat[crap_methods]=2&amp;stat[total_methods]=130&amp;stat[ones]=0&amp;stat[twos]=121&amp;stat[fours]=7&amp;stat[eights]=0&amp;stat[sixteens]=1&amp;stat[thirtytwos]=1&amp;stat[sixtyfours]=0&amp;stat[one28s]=0&amp;stat[two56s]=0
    </shareStatsUrl>
    <histogram>
      <hist>
        <place>
          one
        </place>
        <value>
          0
        </value>
        <height>
          0.00px
        </height>
      </hist>
      <hist>
        <place>
          two
        </place>
        <value>
          121
        </value>
        <height>
          170.00px
        </height>
      </hist>
      <hist>
        <place>
          four
        </place>
        <value>
          7
        </value>
        <height>
          28.00px
        </height>
      </hist>
      <hist>
        <place>
          eight
        </place>
        <value>
          0
        </value>
        <height>
          0.00px
        </height>
      </hist>
      <hist>
        <place>
          sixteen
        </place>
        <value>
          1
        </value>
        <height>
          28.00px
        </height>
      </hist>
      <hist>
        <place>
          thirtytwo
        </place>
        <value>
          1
        </value>
        <height>
          28.00px
        </height>
      </hist>
      <hist>
        <place>
          sixtyfour
        </place>
        <value>
          0
        </value>
        <height>
          0.00px
        </height>
      </hist>
      <hist>
        <place>
          one28
        </place>
        <value>
          0
        </value>
        <height>
          0.00px
        </height>
      </hist>
      <hist>
        <place>
          two56
        </place>
        <value>
          0
        </value>
        <height>
          0.00px
        </height>
      </hist>
    </histogram>
  </stats>
  <methods>
    <method>
      <package>
        edu.wpi.first.wpilibj.templates
      </package>
      <className>
        EncoderTest
      </className>
      <methodName>
        &lt;init&gt;
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
        public  void &lt;init&gt;()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        edu.wpi.first.wpilibj.templates
      </package>
      <className>
        EncoderTest
      </className>
      <methodName>
        autonomousInit
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
        public  void autonomousInit()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        edu.wpi.first.wpilibj.templates
      </package>
      <className>
        EncoderTest
      </className>
      <methodName>
        autonomousPeriodic
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
        public  void autonomousPeriodic()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        edu.wpi.first.wpilibj.templates
      </package>
      <className>
        EncoderTest
      </className>
      <methodName>
        robotInit
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
        public  void robotInit()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        edu.wpi.first.wpilibj.templates
      </package>
      <className>
        EncoderTest
      </className>
      <methodName>
        teleopPeriodic
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
        public  void teleopPeriodic()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        edu.wpi.first.wpilibj.templates
      </package>
      <className>
        EncoderTest
      </className>
      <methodName>
        testPeriodic
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
        public  void testPeriodic()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        nacteam93.robot2014
      </package>
      <className>
        CommandGroup2
      </className>
      <methodName>
        &lt;init&gt;
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
        public  void &lt;init&gt;()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        nacteam93.robot2014
      </package>
      <className>
        OI
      </className>
      <methodName>
        &lt;clinit&gt;
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
        static  void &lt;clinit&gt;()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        nacteam93.robot2014
      </package>
      <className>
        OI
      </className>
      <methodName>
        &lt;init&gt;
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
        public  void &lt;init&gt;()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        nacteam93.robot2014
      </package>
      <className>
        OI
      </className>
      <methodName>
        initialize
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
        public static  void initialize()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        nacteam93.robot2014
      </package>
      <className>
        RobotMain
      </className>
      <methodName>
        &lt;init&gt;
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
        public  void &lt;init&gt;()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        nacteam93.robot2014
      </package>
      <className>
        RobotMain
      </className>
      <methodName>
        autonomousPeriodic
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
        public  void autonomousPeriodic()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        nacteam93.robot2014
      </package>
      <className>
        RobotMain
      </className>
      <methodName>
        robotInit
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
        public  void robotInit()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        nacteam93.robot2014
      </package>
      <className>
        RobotMain
      </className>
      <methodName>
        teleopInit
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
        public  void teleopInit()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        nacteam93.robot2014
      </package>
      <className>
        RobotMain
      </className>
      <methodName>
        teleopPeriodic
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
        public  void teleopPeriodic()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        nacteam93.robot2014
      </package>
      <className>
        RobotMain
      </className>
      <methodName>
        testPeriodic
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
        public  void testPeriodic()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        nacteam93.robot2014
      </package>
      <className>
        RobotMap
      </className>
      <methodName>
        &lt;clinit&gt;
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
        static  void &lt;clinit&gt;()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        nacteam93.robot2014
      </package>
      <className>
        RobotMap
      </className>
      <methodName>
        &lt;init&gt;
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
        public  void &lt;init&gt;()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        nacteam93.robot2014
      </package>
      <className>
        RobotMap
      </className>
      <methodName>
        initialize
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
        public static  void initialize()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        nacteam93.robot2014
      </package>
      <className>
        commandGroup1
      </className>
      <methodName>
        &lt;init&gt;
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
        public  void &lt;init&gt;()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        nacteam93.robot2014.commands
      </package>
      <className>
        AngularTurn
      </className>
      <methodName>
        &lt;init&gt;
      </methodName>
      <methodSignature>
        (D)V
      </methodSignature>
      <fullMethod>
        public  void &lt;init&gt;(double)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        nacteam93.robot2014.commands
      </package>
      <className>
        AngularTurn
      </className>
      <methodName>
        end
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
        protected  void end()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        nacteam93.robot2014.commands
      </package>
      <className>
        AngularTurn
      </className>
      <methodName>
        execute
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
        protected  void execute()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        nacteam93.robot2014.commands
      </package>
      <className>
        AngularTurn
      </className>
      <methodName>
        initialize
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
        protected  void initialize()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        nacteam93.robot2014.commands
      </package>
      <className>
        AngularTurn
      </className>
      <methodName>
        interrupted
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
        protected  void interrupted()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        nacteam93.robot2014.commands
      </package>
      <className>
        BacquisitionEmergencyExpel
      </className>
      <methodName>
        &lt;init&gt;
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
        public  void &lt;init&gt;()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        nacteam93.robot2014.commands
      </package>
      <className>
        BacquisitionEmergencyExpel
      </className>
      <methodName>
        end
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
        protected  void end()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        nacteam93.robot2014.commands
      </package>
      <className>
        BacquisitionEmergencyExpel
      </className>
      <methodName>
        execute
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
        protected  void execute()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        nacteam93.robot2014.commands
      </package>
      <className>
        BacquisitionEmergencyExpel
      </className>
      <methodName>
        initialize
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
        protected  void initialize()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        nacteam93.robot2014.commands
      </package>
      <className>
        BacquisitionEmergencyExpel
      </className>
      <methodName>
        interrupted
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
        protected  void interrupted()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        nacteam93.robot2014.commands
      </package>
      <className>
        BacquisitionEmergencyExpel
      </className>
      <methodName>
        isFinished
      </methodName>
      <methodSignature>
        ()Z
      </methodSignature>
      <fullMethod>
        protected  boolean isFinished()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        nacteam93.robot2014.commands
      </package>
      <className>
        CommandBase
      </className>
      <methodName>
        &lt;clinit&gt;
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
        static  void &lt;clinit&gt;()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        nacteam93.robot2014.commands
      </package>
      <className>
        CommandBase
      </className>
      <methodName>
        &lt;init&gt;
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
        public  void &lt;init&gt;()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        nacteam93.robot2014.commands
      </package>
      <className>
        CommandBase
      </className>
      <methodName>
        &lt;init&gt;
      </methodName>
      <methodSignature>
        (Ljava/lang/String;)V
      </methodSignature>
      <fullMethod>
        public  void &lt;init&gt;(java.lang.String)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        nacteam93.robot2014.commands
      </package>
      <className>
        CommandBase
      </className>
      <methodName>
        init
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
        public static  void init()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        nacteam93.robot2014.commands
      </package>
      <className>
        DriveContinuous
      </className>
      <methodName>
        &lt;init&gt;
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
        public  void &lt;init&gt;()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        nacteam93.robot2014.commands
      </package>
      <className>
        DriveContinuous
      </className>
      <methodName>
        end
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
        protected  void end()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        nacteam93.robot2014.commands
      </package>
      <className>
        DriveContinuous
      </className>
      <methodName>
        execute
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
        protected  void execute()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        nacteam93.robot2014.commands
      </package>
      <className>
        DriveContinuous
      </className>
      <methodName>
        initialize
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
        protected  void initialize()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        nacteam93.robot2014.commands
      </package>
      <className>
        DriveContinuous
      </className>
      <methodName>
        interrupted
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
        protected  void interrupted()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        nacteam93.robot2014.commands
      </package>
      <className>
        DriveForwards
      </className>
      <methodName>
        &lt;init&gt;
      </methodName>
      <methodSignature>
        (I)V
      </methodSignature>
      <fullMethod>
        public  void &lt;init&gt;(int)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        nacteam93.robot2014.commands
      </package>
      <className>
        DriveForwards
      </className>
      <methodName>
        end
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
        protected  void end()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        nacteam93.robot2014.commands
      </package>
      <className>
        DriveForwards
      </className>
      <methodName>
        execute
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
        protected  void execute()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        nacteam93.robot2014.commands
      </package>
      <className>
        DriveForwards
      </className>
      <methodName>
        initialize
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
        protected  void initialize()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        nacteam93.robot2014.commands
      </package>
      <className>
        DriveForwards
      </className>
      <methodName>
        interrupted
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
        protected  void interrupted()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        nacteam93.robot2014.commands
      </package>
      <className>
        DriveForwards
      </className>
      <methodName>
        isFinished
      </methodName>
      <methodSignature>
        ()Z
      </methodSignature>
      <fullMethod>
        protected  boolean isFinished()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        nacteam93.robot2014.commands
      </package>
      <className>
        ExampleCommand
      </className>
      <methodName>
        &lt;init&gt;
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
        public  void &lt;init&gt;()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        nacteam93.robot2014.commands
      </package>
      <className>
        ExampleCommand
      </className>
      <methodName>
        end
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
        protected  void end()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        nacteam93.robot2014.commands
      </package>
      <className>
        ExampleCommand
      </className>
      <methodName>
        execute
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
        protected  void execute()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        nacteam93.robot2014.commands
      </package>
      <className>
        ExampleCommand
      </className>
      <methodName>
        initialize
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
        protected  void initialize()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        nacteam93.robot2014.commands
      </package>
      <className>
        ExampleCommand
      </className>
      <methodName>
        interrupted
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
        protected  void interrupted()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        nacteam93.robot2014.commands
      </package>
      <className>
        FireShooter
      </className>
      <methodName>
        &lt;init&gt;
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
        public  void &lt;init&gt;()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        nacteam93.robot2014.commands
      </package>
      <className>
        FireShooter
      </className>
      <methodName>
        end
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
        protected  void end()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        nacteam93.robot2014.commands
      </package>
      <className>
        FireShooter
      </className>
      <methodName>
        initialize
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
        protected  void initialize()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        nacteam93.robot2014.commands
      </package>
      <className>
        FireShooter
      </className>
      <methodName>
        interrupted
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
        protected  void interrupted()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        nacteam93.robot2014.commands
      </package>
      <className>
        IntakeBall
      </className>
      <methodName>
        &lt;init&gt;
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
        public  void &lt;init&gt;()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        nacteam93.robot2014.commands
      </package>
      <className>
        IntakeBall
      </className>
      <methodName>
        end
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
        protected  void end()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        nacteam93.robot2014.commands
      </package>
      <className>
        IntakeBall
      </className>
      <methodName>
        execute
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
        protected  void execute()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        nacteam93.robot2014.commands
      </package>
      <className>
        IntakeBall
      </className>
      <methodName>
        initialize
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
        protected  void initialize()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        nacteam93.robot2014.commands
      </package>
      <className>
        IntakeBall
      </className>
      <methodName>
        interrupted
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
        protected  void interrupted()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        nacteam93.robot2014.commands
      </package>
      <className>
        OutputBall
      </className>
      <methodName>
        &lt;init&gt;
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
        public  void &lt;init&gt;()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        nacteam93.robot2014.commands
      </package>
      <className>
        OutputBall
      </className>
      <methodName>
        end
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
        protected  void end()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        nacteam93.robot2014.commands
      </package>
      <className>
        OutputBall
      </className>
      <methodName>
        execute
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
        protected  void execute()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        nacteam93.robot2014.commands
      </package>
      <className>
        OutputBall
      </className>
      <methodName>
        initialize
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
        protected  void initialize()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        nacteam93.robot2014.commands
      </package>
      <className>
        OutputBall
      </className>
      <methodName>
        interrupted
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
        protected  void interrupted()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        nacteam93.robot2014.commands
      </package>
      <className>
        OutputBall
      </className>
      <methodName>
        isFinished
      </methodName>
      <methodSignature>
        ()Z
      </methodSignature>
      <fullMethod>
        protected  boolean isFinished()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        nacteam93.robot2014.commands
      </package>
      <className>
        PivoterAlign
      </className>
      <methodName>
        &lt;init&gt;
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
        public  void &lt;init&gt;()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        nacteam93.robot2014.commands
      </package>
      <className>
        PivoterAlign
      </className>
      <methodName>
        end
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
        protected  void end()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        nacteam93.robot2014.commands
      </package>
      <className>
        PivoterAlign
      </className>
      <methodName>
        execute
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
        protected  void execute()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        nacteam93.robot2014.commands
      </package>
      <className>
        PivoterAlign
      </className>
      <methodName>
        initialize
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
        protected  void initialize()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        nacteam93.robot2014.commands
      </package>
      <className>
        PivoterAlign
      </className>
      <methodName>
        interrupted
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
        protected  void interrupted()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        nacteam93.robot2014.commands
      </package>
      <className>
        PivoterAlign
      </className>
      <methodName>
        isFinished
      </methodName>
      <methodSignature>
        ()Z
      </methodSignature>
      <fullMethod>
        protected  boolean isFinished()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        nacteam93.robot2014.commands
      </package>
      <className>
        PivoterControl
      </className>
      <methodName>
        &lt;init&gt;
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
        public  void &lt;init&gt;()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        nacteam93.robot2014.commands
      </package>
      <className>
        PivoterControl
      </className>
      <methodName>
        end
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
        protected  void end()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        nacteam93.robot2014.commands
      </package>
      <className>
        PivoterControl
      </className>
      <methodName>
        execute
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
        protected  void execute()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        nacteam93.robot2014.commands
      </package>
      <className>
        PivoterControl
      </className>
      <methodName>
        initialize
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
        protected  void initialize()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        nacteam93.robot2014.commands
      </package>
      <className>
        PivoterControl
      </className>
      <methodName>
        interrupted
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
        protected  void interrupted()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        nacteam93.robot2014.commands
      </package>
      <className>
        PivoterControl
      </className>
      <methodName>
        isFinished
      </methodName>
      <methodSignature>
        ()Z
      </methodSignature>
      <fullMethod>
        protected  boolean isFinished()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        nacteam93.robot2014.commands
      </package>
      <className>
        RetractShooter
      </className>
      <methodName>
        &lt;init&gt;
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
        public  void &lt;init&gt;()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        nacteam93.robot2014.commands
      </package>
      <className>
        RetractShooter
      </className>
      <methodName>
        end
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
        protected  void end()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        nacteam93.robot2014.commands
      </package>
      <className>
        RetractShooter
      </className>
      <methodName>
        execute
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
        protected  void execute()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        nacteam93.robot2014.commands
      </package>
      <className>
        RetractShooter
      </className>
      <methodName>
        initialize
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
        protected  void initialize()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        nacteam93.robot2014.commands
      </package>
      <className>
        RetractShooter
      </className>
      <methodName>
        interrupted
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
        protected  void interrupted()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        nacteam93.robot2014.commands
      </package>
      <className>
        RetractShooter
      </className>
      <methodName>
        isFinished
      </methodName>
      <methodSignature>
        ()Z
      </methodSignature>
      <fullMethod>
        protected  boolean isFinished()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        nacteam93.robot2014.commands
      </package>
      <className>
        ShooterEmergencyExpel
      </className>
      <methodName>
        &lt;init&gt;
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
        public  void &lt;init&gt;()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        nacteam93.robot2014.commands
      </package>
      <className>
        ShooterEmergencyExpel
      </className>
      <methodName>
        end
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
        protected  void end()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        nacteam93.robot2014.commands
      </package>
      <className>
        ShooterEmergencyExpel
      </className>
      <methodName>
        execute
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
        protected  void execute()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        nacteam93.robot2014.commands
      </package>
      <className>
        ShooterEmergencyExpel
      </className>
      <methodName>
        initialize
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
        protected  void initialize()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        nacteam93.robot2014.commands
      </package>
      <className>
        ShooterEmergencyExpel
      </className>
      <methodName>
        interrupted
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
        protected  void interrupted()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        nacteam93.robot2014.commands
      </package>
      <className>
        ShooterEmergencyExpel
      </className>
      <methodName>
        isFinished
      </methodName>
      <methodSignature>
        ()Z
      </methodSignature>
      <fullMethod>
        protected  boolean isFinished()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        nacteam93.robot2014.commands
      </package>
      <className>
        armContinuous
      </className>
      <methodName>
        &lt;init&gt;
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
        public  void &lt;init&gt;()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        nacteam93.robot2014.commands
      </package>
      <className>
        armContinuous
      </className>
      <methodName>
        end
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
        protected  void end()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        nacteam93.robot2014.commands
      </package>
      <className>
        armContinuous
      </className>
      <methodName>
        initialize
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
        protected  void initialize()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        nacteam93.robot2014.commands
      </package>
      <className>
        armContinuous
      </className>
      <methodName>
        interrupted
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
        protected  void interrupted()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        nacteam93.robot2014.commands
      </package>
      <className>
        armContinuous
      </className>
      <methodName>
        isFinished
      </methodName>
      <methodSignature>
        ()Z
      </methodSignature>
      <fullMethod>
        protected  boolean isFinished()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        nacteam93.robot2014.subsystems
      </package>
      <className>
        Bacquisition
      </className>
      <methodName>
        &lt;init&gt;
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
        public  void &lt;init&gt;()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        nacteam93.robot2014.subsystems
      </package>
      <className>
        Bacquisition
      </className>
      <methodName>
        initDefaultCommand
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
        public  void initDefaultCommand()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        nacteam93.robot2014.subsystems
      </package>
      <className>
        Drive
      </className>
      <methodName>
        &lt;init&gt;
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
        public  void &lt;init&gt;()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        nacteam93.robot2014.subsystems
      </package>
      <className>
        Drive
      </className>
      <methodName>
        initDefaultCommand
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
        public  void initDefaultCommand()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        nacteam93.robot2014.subsystems
      </package>
      <className>
        Pivoter
      </className>
      <methodName>
        &lt;init&gt;
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
        public  void &lt;init&gt;()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        nacteam93.robot2014.subsystems
      </package>
      <className>
        Pivoter
      </className>
      <methodName>
        initDefaultCommand
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
        public  void initDefaultCommand()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        nacteam93.robot2014.subsystems
      </package>
      <className>
        Shooter
      </className>
      <methodName>
        &lt;init&gt;
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
        public  void &lt;init&gt;()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        nacteam93.robot2014.subsystems
      </package>
      <className>
        Shooter
      </className>
      <methodName>
        checkRetracted
      </methodName>
      <methodSignature>
        ()Z
      </methodSignature>
      <fullMethod>
        private  boolean checkRetracted()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        nacteam93.robot2014.subsystems
      </package>
      <className>
        Shooter
      </className>
      <methodName>
        initDefaultCommand
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
        public  void initDefaultCommand()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        nacteam93.robot2014.subsystems
      </package>
      <className>
        Shooter
      </className>
      <methodName>
        isRetracted
      </methodName>
      <methodSignature>
        ()Z
      </methodSignature>
      <fullMethod>
        public  boolean isRetracted()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        nacteam93.robot2014.wpilibextensions
      </package>
      <className>
        PIDSourceGroup$PIDSourceParameter
      </className>
      <methodName>
        &lt;clinit&gt;
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
        static  void &lt;clinit&gt;()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        nacteam93.robot2014.wpilibextensions
      </package>
      <className>
        PIDSourceGroup$PIDSourceParameter
      </className>
      <methodName>
        &lt;init&gt;
      </methodName>
      <methodSignature>
        (I)V
      </methodSignature>
      <fullMethod>
        private  void &lt;init&gt;(int)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        nacteam93.robot2014.wpilibextensions
      </package>
      <className>
        PIDSourceGroup
      </className>
      <methodName>
        &lt;init&gt;
      </methodName>
      <methodSignature>
        (Ledu/wpi/first/wpilibj/PIDSource;Ledu/wpi/first/wpilibj/PIDSource;DD)V
      </methodSignature>
      <fullMethod>
        public  void &lt;init&gt;(edu.wpi.first.wpilibj.PIDSource, edu.wpi.first.wpilibj.PIDSource, double, double)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        nacteam93.robot2014.wpilibextensions
      </package>
      <className>
        PIDSourceGroup
      </className>
      <methodName>
        pidGet
      </methodName>
      <methodSignature>
        ()D
      </methodSignature>
      <fullMethod>
        public  double pidGet()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        nacteam93.robot2014.wpilibextensions
      </package>
      <className>
        SpeedControllerGroup
      </className>
      <methodName>
        &lt;init&gt;
      </methodName>
      <methodSignature>
        (Ledu/wpi/first/wpilibj/SpeedController;Ledu/wpi/first/wpilibj/SpeedController;)V
      </methodSignature>
      <fullMethod>
        public  void &lt;init&gt;(edu.wpi.first.wpilibj.SpeedController, edu.wpi.first.wpilibj.SpeedController)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        nacteam93.robot2014.wpilibextensions
      </package>
      <className>
        SpeedControllerGroup
      </className>
      <methodName>
        &lt;init&gt;
      </methodName>
      <methodSignature>
        (Ledu/wpi/first/wpilibj/SpeedController;Ledu/wpi/first/wpilibj/SpeedController;DD)V
      </methodSignature>
      <fullMethod>
        public  void &lt;init&gt;(edu.wpi.first.wpilibj.SpeedController, edu.wpi.first.wpilibj.SpeedController, double, double)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        nacteam93.robot2014.wpilibextensions
      </package>
      <className>
        SpeedControllerGroup
      </className>
      <methodName>
        disable
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
        public  void disable()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        nacteam93.robot2014.wpilibextensions
      </package>
      <className>
        SpeedControllerGroup
      </className>
      <methodName>
        get
      </methodName>
      <methodSignature>
        ()D
      </methodSignature>
      <fullMethod>
        public  double get()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        nacteam93.robot2014.wpilibextensions
      </package>
      <className>
        SpeedControllerGroup
      </className>
      <methodName>
        pidWrite
      </methodName>
      <methodSignature>
        (D)V
      </methodSignature>
      <fullMethod>
        public  void pidWrite(double)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        nacteam93.robot2014.wpilibextensions
      </package>
      <className>
        SpeedControllerGroup
      </className>
      <methodName>
        set
      </methodName>
      <methodSignature>
        (D)V
      </methodSignature>
      <fullMethod>
        public  void set(double)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        nacteam93.robot2014.wpilibextensions
      </package>
      <className>
        SpeedControllerGroup
      </className>
      <methodName>
        set
      </methodName>
      <methodSignature>
        (DB)V
      </methodSignature>
      <fullMethod>
        public  void set(double, byte)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        nacteam93.robot2014.wpilibextensions
      </package>
      <className>
        SpeedControllerGroup
      </className>
      <methodName>
        setGains
      </methodName>
      <methodSignature>
        (D)V
      </methodSignature>
      <fullMethod>
        public  void setGains(double)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        nacteam93.robot2014.wpilibextensions
      </package>
      <className>
        SpeedControllerGroup
      </className>
      <methodName>
        setGains
      </methodName>
      <methodSignature>
        (DD)V
      </methodSignature>
      <fullMethod>
        public  void setGains(double, double)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        nacteam93.robot2014.wpilibextensions
      </package>
      <className>
        Team93Potentiometer
      </className>
      <methodName>
        &lt;init&gt;
      </methodName>
      <methodSignature>
        (IIDD)V
      </methodSignature>
      <fullMethod>
        public  void &lt;init&gt;(int, int, double, double)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        nacteam93.robot2014.wpilibextensions
      </package>
      <className>
        Team93Potentiometer
      </className>
      <methodName>
        getAngle
      </methodName>
      <methodSignature>
        ()D
      </methodSignature>
      <fullMethod>
        public  double getAngle()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        nacteam93.robot2014.wpilibextensions
      </package>
      <className>
        Team93Potentiometer
      </className>
      <methodName>
        pidGet
      </methodName>
      <methodSignature>
        ()D
      </methodSignature>
      <fullMethod>
        public  double pidGet()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        nacteam93.robot2014.commands
      </package>
      <className>
        AngularTurn
      </className>
      <methodName>
        isFinished
      </methodName>
      <methodSignature>
        ()Z
      </methodSignature>
      <fullMethod>
        protected  boolean isFinished()
      </fullMethod>
      <crap>
        6.00
      </crap>
      <complexity>
        2
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        nacteam93.robot2014.commands
      </package>
      <className>
        DriveContinuous
      </className>
      <methodName>
        isFinished
      </methodName>
      <methodSignature>
        ()Z
      </methodSignature>
      <fullMethod>
        protected  boolean isFinished()
      </fullMethod>
      <crap>
        6.00
      </crap>
      <complexity>
        2
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        nacteam93.robot2014.commands
      </package>
      <className>
        ExampleCommand
      </className>
      <methodName>
        isFinished
      </methodName>
      <methodSignature>
        ()Z
      </methodSignature>
      <fullMethod>
        protected  boolean isFinished()
      </fullMethod>
      <crap>
        6.00
      </crap>
      <complexity>
        2
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        nacteam93.robot2014.commands
      </package>
      <className>
        FireShooter
      </className>
      <methodName>
        execute
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
        protected  void execute()
      </fullMethod>
      <crap>
        6.00
      </crap>
      <complexity>
        2
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        nacteam93.robot2014.commands
      </package>
      <className>
        FireShooter
      </className>
      <methodName>
        isFinished
      </methodName>
      <methodSignature>
        ()Z
      </methodSignature>
      <fullMethod>
        protected  boolean isFinished()
      </fullMethod>
      <crap>
        6.00
      </crap>
      <complexity>
        2
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        nacteam93.robot2014.commands
      </package>
      <className>
        IntakeBall
      </className>
      <methodName>
        isFinished
      </methodName>
      <methodSignature>
        ()Z
      </methodSignature>
      <fullMethod>
        protected  boolean isFinished()
      </fullMethod>
      <crap>
        6.00
      </crap>
      <complexity>
        2
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        nacteam93.robot2014.commands
      </package>
      <className>
        armContinuous
      </className>
      <methodName>
        execute
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
        protected  void execute()
      </fullMethod>
      <crap>
        6.00
      </crap>
      <complexity>
        2
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        nacteam93.robot2014.commands
      </package>
      <className>
        armContinuous
      </className>
      <methodName>
        withinTolerance
      </methodName>
      <methodSignature>
        (D)Z
      </methodSignature>
      <fullMethod>
        private  boolean withinTolerance(double)
      </fullMethod>
      <crap>
        30.00
      </crap>
      <complexity>
        5
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        5
      </crapLoad>
    </method>
    <method>
      <package>
        nacteam93.robot2014
      </package>
      <className>
        RobotMain
      </className>
      <methodName>
        autonomousInit
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
        public  void autonomousInit()
      </fullMethod>
      <crap>
        42.00
      </crap>
      <complexity>
        6
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        6
      </crapLoad>
    </method>
  </methods>
</crap_result>
