// RobotBuilder Version: 1.5
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.

package org.usfirst.frc93.Team93Robot2015.commands;

import edu.wpi.first.wpilibj.command.Command;

import org.usfirst.frc93.Team93Robot2015.Robot;

/**
 * This command moves the drawbridge in.
 */
public class MoveDrawbridgeIn extends Command {

    public MoveDrawbridgeIn() {
        // Use requires() here to declare subsystem dependencies
        requires(Robot.drawbridge);
    }

    // Called just before this Command runs the first time
    @Override
    protected void initialize() {
        Robot.drawbridge.retractDrawbridge();
        /**
         * @codreview ColbyMcKinley: Would it be better to create a new class
         *            for robot functions and use smart dashboard. This would
         *            declutter the Riolog and be able to see it easier.
         */
        System.out.println("Retracting Drawbridge");
        System.out.flush();
    }

    // Called repeatedly when this Command is scheduled to run
    @Override
    protected void execute() {
    }

    // Make this return true when this Command no longer needs to run execute()
    @Override
    protected boolean isFinished() {
        return true;
    }

    // Called once after isFinished returns true
    @Override
    protected void end() {
        /**
         * @codreview ColbyMcKinley: Would it be better to create a new class
         *            for robot functions and use smart dashboard. This would
         *            declutter the Riolog and be able to see it easier.
         */
        System.out.println("Drawbridge In Command Finished");
    }

    // Called when another command which requires one or more of the same
    // subsystems is scheduled to run
    @Override
    protected void interrupted() {
    }
}
