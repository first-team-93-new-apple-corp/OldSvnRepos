<?xml version="1.0" encoding="UTF-8"?>

<project name="FRC Deployment" default="deploy">

  <!--
  The following properties can be defined to override system level
  settings. These should not be touched unless you know what you're
  doing. The primary use is to override the wpilib version when
  working with older robots that can't compile with the latest
  libraries.
  -->

  <!-- By default the system version of WPI is used -->
  <!-- <property name="version" value=""/> -->

  <!-- By default the system team number is used -->
  <!-- <property name="team-number" value=""/> -->

  <!-- By default the target is set to 10.TE.AM.2 -->
  <!-- <property name="target" value=""/> -->

  <property file="${user.home}/wpilib/wpilib.properties"/>
  <property file="build.properties"/>
  <property file="${user.home}/wpilib/java/${version}/ant/build.properties"/>
  
  
  
   <!-- Linter lint4j target -->
    <taskdef name="lint4j" classname="com.jutils.lint4j.ant.Lint4jAntTask">
      <classpath>
        <pathelement location="${basedir}/hooks/lint4j/jars/lint4j.jar" />
      </classpath>
    </taskdef>
    <target name="run-lint4j" description="Perform lint4j static analysis">
      <lint4j packages="org.usfirst.frc93.*" level="3" exact="false">
        <classpath>
          <!--
          Removed dir="${basedir}/build/classes"  name="**/*.jar" because it
          doesn't appear to be necessary.
          -->
          <fileset dir="${basedir}/lib">
            <include name="**/*.jar" />
          </fileset>
        </classpath>
        <sourcepath>
          <dirset dir="${basedir}">
            <include name="src" />
          </dirset>
          <!-- <pathelement location="${basedir}/src" />  Not sure which is correct, but style shown here works. -->
        </sourcepath>
        <formatters>
          <formatter type="text" />
          <formatter type="text" toFile="reports/lint4j/lint.txt" />
          <formatter type="xml" toFile="reports/lint4j/lint.xml" />
        </formatters>
      </lint4j>
    </target>  
  <!-- Any other property in build.properties can also be overridden. -->
  
  
  <import file="${wpilib.ant.dir}/build.xml"/>
  


	<!-- Override compile target to call lint4j -->
	<!--
	<target name="compile" depends="athena-project-build.compile,run-lint4j" description="Compile the source code.">
	</target>
	-->
	<target name="compile" depends="athena-project-build.compile" description="Compile the source code.">
	</target>
	
	<taskdef name="findbugs" classname="edu.umd.cs.findbugs.anttask.FindBugsTask">
	  <classpath>
	    <pathelement location="${basedir}/hooks/findbugs/lib/findbugs-ant.jar" />
	  </classpath>
	</taskdef>
	
	<property name="findbugs.home" value="${basedir}/hooks/findbugs/" />
	<target name="findbugs" depends="jar">
	  <findbugs home="${findbugs.home}" output="xml" outputFile="${basedir}/reports/findbugs.xml" >
	    <auxClasspath path="${basedir}/lib/" />
	    <sourcePath path="${basedir}/src/" />
	  	<class location="${basedir}/bin/" />
	  </findbugs>
	</target>
	<!-- Crap4j -->
	<property name="CRAP4J_HOME"value="${basedir}/hooks/crap4j" />
		
	<taskdef name="crap4j" classname="org.crap4j.ant.Crap4jAntTask">
		<classpath>
			<fileset dir="${CRAP4J_HOME}/lib">
				<include name="**/.jar" />
			</fileset>
		</classpath>
	</taskdef>
	
	<target name ="run-crap4j">
		<crap4j projectdir="${basedir}"
			outputDir="agitar/report/crap4j"
			dontTest="false"debug="false">
			
			<classDirs>
				<pathElement location="bin"/>
			</classDirs>
			
			<srcDirs>
				<pathElement location="src" />
			</srcDirs>
			
			<testClassDirs>
				<pathElement location="test_bin" />
			</testClassDirs>
			
			<libClasspath>
				<fileset dir="lib">
					<include name="**/*.jar" />
				</fileset>
			</libClasspath>
		</crap4j>
	</target>
	
	
</project> 
