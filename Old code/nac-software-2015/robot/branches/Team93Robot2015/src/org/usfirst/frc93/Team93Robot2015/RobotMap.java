// RobotBuilder Version: 1.5
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.

package org.usfirst.frc93.Team93Robot2015;

import edu.wpi.first.wpilibj.AnalogInput;
import edu.wpi.first.wpilibj.DigitalInput;
import edu.wpi.first.wpilibj.Encoder;
import edu.wpi.first.wpilibj.Talon;

/**
 * The RobotMap is a mapping from the ports sensors and actuators are wired into
 * to a variable name. This provides flexibility changing wiring, makes checking
 * the wiring easier and significantly reduces the number of magic numbers
 * floating around.
 */
public class RobotMap {
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS

    // Placeholder variables
    static int autonomousSelectorPinOne = 2;
    static int autonomousSelectorPinTwo = 3;
    static int autonomousSelectorPinThree = 8;
    static int autonomousSelectorPinFour = 9;
    // static int autonomousSelectorPinFive = 10;

    // Autonomous Selector Switches
    public static DigitalInput autonomousSelectorOne = new DigitalInput(
            autonomousSelectorPinOne); // INPUT
    // VALUES
    // WILL
    // NEED
    // TO
    // BE
    // ADJUSTED
    public static DigitalInput autonomousSelectorTwo = new DigitalInput(
            autonomousSelectorPinTwo);
    public static DigitalInput autonomousSelectorThree = new DigitalInput(
            autonomousSelectorPinThree);
    public static DigitalInput autonomousSelectorFour = new DigitalInput(
            autonomousSelectorPinFour);
    // public static DigitalInput autonomousSelectorFive = new
    // DigitalInput(autonomousSelectorPinFive);
    // Limit Switches
    public static DigitalInput limitSwitchOne = new DigitalInput(0);
    public static DigitalInput limitSwitchTwo = new DigitalInput(1);
    // Encoders
    public static Encoder leftMotorEncoder;
    public static Encoder rightMotorEncoder;
    // Motors
    public static Talon leftMotorOne = new Talon(0);
    public static Talon leftMotorTwo = new Talon(1);
    public static Talon rightMotorOne = new Talon(2);
    public static Talon rightMotorTwo = new Talon(3);
    //
    public static AnalogInput PWDSensor = new AnalogInput(0);
    public static AnalogInput PWDSensorTwo = new AnalogInput(2);

    // public static CameraServer camera = CameraServer.getInstance();
    // public static USBCamera cam0 = new USBCamera();

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS

    public static void init() {
        leftMotorEncoder = new Encoder(6, 7);
        rightMotorEncoder = new Encoder(4, 5);

        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS

        // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
    }
}
